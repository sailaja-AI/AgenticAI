import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

public class CommandInjectionExample {

    // Vulnerable Java Example - Command Injection
    public static void pingHostVulnerable(String host) {
        // DANGEROUS: Directly embedding user input into a shell command
        String command = "ping " + host;
        System.out.println("Executing vulnerable command: " + command);
        try {
            Process process = Runtime.getRuntime().exec(command);
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line;
            while ((line = reader.readLine()) != null) {
                System.out.println(line);
            }
            process.waitFor();
        } catch (IOException | InterruptedException e) {
            System.err.println("Error executing command (vulnerable): " + e.getMessage());
        }
    }

    // Secure Java Example - Command Injection
    public static void pingHostSecure(String host) {
        // SECURE: Pass arguments as separate strings to ProcessBuilder
        // Or, validate input string to ensure it only contains allowed characters
        if (!host.matches("^[a-zA-Z0-9.-]+$")) { // Basic validation
            System.err.println("Invalid host name. Only alphanumeric characters, dots, and hyphens are allowed.");
            return;
        }

        System.out.println("Executing secure command for host: " + host);
        try {
            // Use ProcessBuilder with a list of arguments for safety
            // For Linux/macOS:
            ProcessBuilder pb = new ProcessBuilder("ping", "-c", "1", host);
            // For Windows:
            // ProcessBuilder pb = new ProcessBuilder("cmd.exe", "/c", "ping", "-n", "1", host);

            Process process = pb.start();
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line;
            while ((line = reader.readLine()) != null) {
                System.out.println(line);
            }
            process.waitFor();
        } catch (IOException | InterruptedException e) {
            System.err.println("Error executing command (secure): " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        System.out.println("--- Command Injection Examples ---");

        // Test vulnerable function
        System.out.println("\nVulnerable function output for 'google.com':");
        pingHostVulnerable("google.com");

        System.out.println("\nVulnerable function output for 'google.com && ls':");
        // Attacker input
        pingHostVulnerable("google.com && ls"); // Injects 'ls' command on Linux/macOS

        // Test secure function
        System.out.println("\nSecure function output for 'google.com':");
        pingHostSecure("google.com");

        System.out.println("\nSecure function output for 'google.com && ls':");
        pingHostSecure("google.com && ls"); // Treated as a literal host
    }
}