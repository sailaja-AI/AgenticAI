import os

# Vulnerable Python Example - Path Traversal
def read_file_vulnerable(filename):
    base_dir = "./user_files/"
    filepath = os.path.join(base_dir, filename)
    print(f"Attempting to read from (vulnerable): {filepath}")
    try:
        with open(filepath, 'r') as f:
            return f.read()
    except FileNotFoundError:
        return "File not found."
    except Exception as e:
        return f"Error reading file: {e}"

# Secure Python Example - Path Traversal
def read_file_secure(filename):
    base_dir = os.path.abspath("./user_files/")
    # CRITICAL: Normalize path and ensure it stays within base_dir
    abs_filepath = os.path.abspath(os.path.join(base_dir, filename))

    if not abs_filepath.startswith(base_dir):
        return "Access denied: Path traversal attempt detected."

    print(f"Attempting to read from (secure): {abs_filepath}")
    try:
        with open(abs_filepath, 'r') as f:
            return f.read()
    except FileNotFoundError:
        return "File not found."
    except Exception as e:
        return f"Error reading file: {e}"

if __name__ == "__main__":
    # Setup dummy files
    os.makedirs("./user_files", exist_ok=True)
    with open("./user_files/document.txt", "w") as f:
        f.write("This is a user document.")
    with open("./secret.txt", "w") as f:
        f.write("This is a secret system file.")

    print("--- Path Traversal Examples ---")

    # Test vulnerable function
    print("\nVulnerable function output for 'document.txt':")
    print(read_file_vulnerable("document.txt"))

    print("\nVulnerable function output for '../secret.txt':")
    # Attacker input
    print(read_file_vulnerable("../secret.txt")) # Path traversal attempt

    # Test secure function
    print("\nSecure function output for 'document.txt':")
    print(read_file_secure("document.txt"))

    print("\nSecure function output for '../secret.txt':")
    print(read_file_secure("../secret.txt"))

    # Clean up dummy files
    os.remove("./user_files/document.txt")
    os.remove("./secret.txt")
    os.rmdir("./user_files")