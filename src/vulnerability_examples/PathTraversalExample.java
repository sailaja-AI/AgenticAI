import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.Path;

public class PathTraversalExample {

    // Vulnerable Java Example - Path Traversal
    public static void readFileVulnerable(String filename) {
        String baseDir = "./user_files/";
        String filepath = baseDir + filename;
        System.out.println("Attempting to read from (vulnerable): " + filepath);
        try {
            String content = new String(Files.readAllBytes(Paths.get(filepath)));
            System.out.println("Content:\n" + content);
        } catch (IOException e) {
            System.err.println("Error reading file (vulnerable): " + e.getMessage());
        }
    }

    // Secure Java Example - Path Traversal
    public static void readFileSecure(String filename) {
        Path baseDirPath = Paths.get("./user_files/").toAbsolutePath().normalize();
        Path requestedPath = baseDirPath.resolve(filename).normalize();

        // CRITICAL: Ensure the resolved path starts with the base directory path
        if (!requestedPath.startsWith(baseDirPath)) {
            System.err.println("Access denied: Path traversal attempt detected for filename: " + filename);
            return;
        }

        System.out.println("Attempting to read from (secure): " + requestedPath);
        try {
            String content = new String(Files.readAllBytes(requestedPath));
            System.out.println("Content:\n" + content);
        } catch (IOException e) {
            System.err.println("Error reading file (secure): " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        // Setup dummy files
        new File("./user_files").mkdirs();
        try {
            Files.write(Paths.get("./user_files/document.txt"), "This is a user document.".getBytes());
            Files.write(Paths.get("./secret.txt"), "This is a secret system file.".getBytes());
        } catch (IOException e) {
            System.err.println("Error setting up files: " + e.getMessage());
            return;
        }

        System.out.println("--- Path Traversal Examples ---");

        // Test vulnerable function
        System.out.println("\nVulnerable function output for 'document.txt':");
        readFileVulnerable("document.txt");

        System.out.println("\nVulnerable function output for '../secret.txt':");
        // Attacker input
        readFileVulnerable("../secret.txt");

        // Test secure function
        System.out.println("\nSecure function output for 'document.txt':");
        readFileSecure("document.txt");

        System.out.println("\nSecure function output for '../secret.txt':");
        readFileSecure("../secret.txt");

        // Clean up dummy files
        try {
            Files.deleteIfExists(Paths.get("./user_files/document.txt"));
            Files.deleteIfExists(Paths.get("./secret.txt"));
            Files.deleteIfExists(Paths.get("./user_files"));
        } catch (IOException e) {
            System.err.println("Error cleaning up files: " + e.getMessage());
        }
    }
}