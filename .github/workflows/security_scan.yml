name: AI Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Download Trained Models from GitHub Release
      run: |
        gh release download v1.0.0 --pattern 'rl_model.zip' --clobber
        gh release download v1.0.0 --pattern 'final_model.zip' --clobber
        unzip -o final_model.zip -d results_codebert/
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Run Semgrep Scan
      uses: returntocorp/semgrep-action@v1
      with:
        # Semgrep rules to use. You can specify a config file or a registry rule.
        # For example, to scan for Python rules:
        # config: p/python
        # Or, if you have custom rules in your repo:
        # config: .semgrep/rules.yaml
        config: auto
      env:
        SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }} # Optional, for Semgrep App

    - name: Run AI Vulnerability Scan (and capture output)
      id: ai_scan
      run: |
        echo "--- Starting AI Vulnerability Scan ---"
        # Run your Python script and capture its output
        # We redirect stderr to stdout so all messages are captured.
        SCAN_OUTPUT=$(python -m src vulnerable_app.py 2>&1)
        echo "$SCAN_OUTPUT"
        # Set the output for the next step
        echo "scan_output<<EOF" >> $GITHUB_OUTPUT
        echo "$SCAN_OUTPUT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Post Analysis Results to PR Comment
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          // Define a string that will be the comment body
          let commentBody = '## AI Security Scan Results\n\n';
          commentBody += '<details>\n<summary>Click to view details from AI scanner</summary>\n\n';
          commentBody += '```\n' + '${{ steps.ai_scan.outputs.scan_output }}' + '\n```\n';
          commentBody += '</details>\n\n';
          commentBody += '*Semgrep results are available in the Security tab.*\n';

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: commentBody
          });
```

